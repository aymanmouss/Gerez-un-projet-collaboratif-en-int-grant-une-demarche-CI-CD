name: CI/CD Tests & Coverage

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: # ‚Üê Permet de lancer manuellement !

jobs:
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build --if-present

      - name: Run tests with coverage
        run: npm run test -- --code-coverage --watch=false --browsers=ChromeHeadless --reporters=coverage,progress

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: back

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn clean compile

      - name: Run tests with coverage
        run: mvn test jacoco:report

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco

  test-summary:
    name: Test Results Summary
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    if: always()

    steps:
      - name: Display test results
        run: |
          echo "## üìä Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| üåê Frontend | ${{ needs.test-frontend.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| ‚öôÔ∏è Backend | ${{ needs.test-backend.result }} |" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.test-frontend.result }}" == "success" && "${{ needs.test-backend.result }}" == "success" ]]; then
            echo "| **üéâ Overall** | ‚úÖ **SUCCESS** |" >> $GITHUB_STEP_SUMMARY
            echo "‚úÖ All tests passed successfully!"
          else
            echo "| **‚ùå Overall** | ‚ùå **FAILED** |" >> $GITHUB_STEP_SUMMARY
            echo "‚ùå Some tests failed"
            exit 1
          fi
