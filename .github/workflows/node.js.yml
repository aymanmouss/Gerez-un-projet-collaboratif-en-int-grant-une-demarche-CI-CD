name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test-frontend:
    name: Frontend Tests & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd front
          npm ci

      - name: Build frontend
        run: |
          cd front
          npm run build --if-present

      - name: Run frontend tests with coverage
        run: |
          cd front
          npm run test -- --code-coverage --watch=false --browsers=ChromeHeadless --reporters=coverage,progress

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/

  test-backend:
    name: Backend Tests & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run backend tests with coverage
        run: |
          cd back
          mvn clean test jacoco:report

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    if: always()

    steps:
      - name: Download all coverage reports
        uses: actions/download-artifact@v4

      - name: Display test results
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend Tests | ${{ needs.test-frontend.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend Tests | ${{ needs.test-backend.result }} |" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.test-frontend.result }}" == "success" && "${{ needs.test-backend.result }}" == "success" ]]; then
            echo "✅ All tests passed successfully!"
            echo "| **Overall** | ✅ **SUCCESS** |" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed"
            echo "| **Overall** | ❌ **FAILED** |" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
